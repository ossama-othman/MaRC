Thu Feb  9 14:22:52 EST 2006  Nathanael Nerode  <neroden@fastmail.fm>

	These changes span many files.

	Miscellaneous changes:
	* Make a const variant of the convenience operator in Image.h, 
	and use it.
	* Change interface to GeometricCorrection to eliminate
	dependencies on the location of the optical axis in the photo, and on
	the direction in which line numbers increase.
	* Fix the off-by-one-half error in PhotoImage.cc (pixel coordinates)
	* Install headers in the correct place.
	* Fix dreadful bug where covariant return types weren't being used.
	* Make OblateSpheroid use Geometry.h rather than being stupid.
	* Put the most heavily used routines from OblateSpheroid into 
	the header so that they can be properly inlined.

	Interface changes preparatory to supersampling:
	* Convert PhotoImage's constructor to the named parameter idiom, 
	introducing PhotoImageParameters.cc and PhotoImageParameters.h.  
	This allows most of the data members of PhotoImage to be made 
	'const'.
	* Convert all the 'parameter setting' routines to throw rather than
	returning values (since, after all, the values are ignored by the
	caller).
	* Patch up PhotoImage and PhotoImageParameters so that the later
	auto-finalizes during the initialization of the former.
	* Put all the trivial setter functions inline into the header of
	PhotoImageParameters.h for speed.
	* Eliminate OA_SET in favor of a clean default value.
	* Remove arcsec_per_pixel from PhotoImage.
	* Switch the type for the list of images in the MosaicImage from
	std::vector<PhotoImage> to std::vector< ValuePtr<PhotoImage> >;
	also, eliminate the use of 'const' PhotoImage and MosaicImage 
	objects.
	* Redeclare read_data to be non-const.  This is really rather icky, but
	is strictly necessary for the supersampling verification 
	implementation; and now that all the data *inside* a PhotoImage
	is const, this should not be nearly so bad as it would be otherwise.
	* Push filename through into PhotoImage.

	Supersampling changes proper:
	* Introduce
	SUPERSAMPLE_VERIFY: YES
	SUPERSAMPLE_VERIFY: NO
	options, which can be used immediately before nibbling options
	(in either location).  Push this information through all the way 
	to PhotoImage.
	* Rearrange sky removal checks to check an actual flag.
	* Rearrange sky_mask_ generation code to generate it whenever
	doing supersample verification.
	* Introduce image_unread_mask_; initialize it from sky_mask_;
	and unset bits in it as read_data runs.  Introduce an
	routine to check its value.
	* Actually cause supersample verification to be used, by
	adding check_image_unread_mask to SourceImage, implementing
	it in MosaicImage, and calling it in MapCommand_T.
	* Add supersample tests.

	Projection algorithm changes:
	* Implement the new algorithm.  Tested on many sets of data;
	matches the old algorithm, but is faster, simpler, and 
	mathematically sound.

Wed Nov 16 16:11:12 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/LongitudeImage.cc (read_data_i):

	  Force longitudes to be in 360 degree range.

Wed Nov 16 15:37:44 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac (AC_INIT):

	  Corrected maintainer e-mail address.  "sourceforge.net" not
	  "sourceforge.edu".

Mon Nov 14 00:46:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/PhotoImage.cc (is_visible):

	  Determine visibility by verifying the emission and incidence
	  (only checked if configured to do so) angles are positive.
	  Greatly simplifies this method, correctly takes into account
	  necessary viewing geometry variables, and removes requirement
	  that the body is modeled as an oblate spheroid.  Thanks to
	  Nathanael Nerode for developing this implementation.

	* lib/MaRC/PhotoImage.h (PhotoImage):

	  Reverted change that reintroduced normal range member and added
	  a return value to the latlon2pix() method.  Neither is needed
	  with the new is_visible() method implementation in place.

	* lib/MaRC/Orthographic.cc (make_map):

	  Refactored z-axis rotation computation to MaRC::Geometry::RotZ
	  function.  Thanks to Nathanael Nerode for suggesting this
	  change.

Sat Nov 12 00:08:45 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.7 released.

Fri Nov 11 23:53:43 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* THANKS:

	  Updated list of contributors.

Fri Nov 11 23:36:39 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:

	  Updated with latest noteworthy changes.

	* configure.ac:

	  Bumped up MaRC version.

	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  Moved `Interpolation_Strategy.h' from noinst_HEADERS to this
	  list of headers so that it is installed.

	From Nathanael Nerode <neroden at astro dot cornell dot edu>.
	* lib/MaRC/PhotoImage.cc (latlon2pix):

	  Determine visibility of given latitude/longitude by verifying
	  that the corresponding computed observation vector component
	  along the optical axis is not greater than the distance from the
	  observer to the body along the optical axis.  This takes into
	  account an observer optical axis that is not in line with the
	  sub-observation point.  The old calculation in the is_visible()
	  method assumed that the observer was pointed directly at the
	  sub-observation point.

	  (is_visible):

	  Removed old latitude/longitude visibility determination code.
	  It did not take into account the case where the observer was not
	  looking directly at the sub-observation point.

	* lib/MaRC/PhotoImage.h (normal_range_):

	  Reintroduced this class attribute.

Wed Nov  9 10:59:33 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.6 released.

Wed Nov  9 10:56:38 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:

	  Updated with latest noteworthy changes.

	* configure.ac:

	  Bumped up MaRC version.

	* lib/MaRC/InterpolationStrategy.cpp:

	  New source file containing virtual InterpolatationStrategy
	  destructor.

	* lib/MaRC/InterpolationStrategy.h (InterpolationStrategy):

	  Added virtual destructor, addresses memory management problems
	  when delete()ing subclasses through an InterpolationStrategy
	  base class pointer.

	* lib/MaRC/Makefile.am (libMaRC_la_SOURCES):

	  Add new `InterpolationStrategy.cpp' file to list of sources.

	* lib/MaRC/NullInterpolationStrategy.cpp:
	* lib/MaRC/NullInterpolationStrategy.h:
	* lib/MaRC/PhotoInterpolationStrategy.cpp:
	* lib/MaRC/PhotoInterpolationStrategy.h:

	  Added virtual destructors since the InterpolationStrategy base
	  class now has one.

	* lib/MaRC/PhotoImage.cc (PhotoImage):

	  Removed "normal_range_" from base member initializer list.  It
	  is no longer a class member.

	  (finalize_setup):

	  Do not set "focal_length_pixels_" value from computed values if
	  focal length and scale are available.  Reduces floating point
	  computation error.  Thanks to Nathanael Nerode for pointing out
	  this problem and suggesting a fix.

	* lib/MaRC/PhotoImage.h (normal_range_):

	  Removed this field.  Since it is only used to compute a
	  temporary/intermediate value, it need not be a class member.

	* lib/MaRC/misc.h (check):

	  Fixed logic error where result of "false" was returned in most
	  cases.  Addresses incorrect configuration in PhotoImage class
	  and potentially use cases.

Tue Feb  8 12:34:16 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.5 released.

Tue Feb  8 12:25:38 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:

	  Updated with latest noteworthy changes.

	* THANKS:

	  Added Krzysztof Findeisen.

	* configure.ac:

	  Bumped up MaRC version.

	  Require Automake 1.9.4 or better.

	* src/MapCommand.cpp (execute):

	  Cosmetic improvement to map progress output.

	* src/marc.cc (main):

	  Fixed map corruption and redundant mapping problems that
	  occured when specifying more than one MaRC input file on the
	  command line to parse.  Thanks to Krzysztof Findeisen
	  <kpf4 at cornell dot edu> for pointing out the problem.

Mon Nov  8 13:36:15 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Removed check for document generation tools.  Users shouldn't be
	  concerned with whether or not they exist, and maintainers should
	  know which tools are required.

	* doc/Makefile.am:

	  Removed custom PDF, PostScript and HTML document generation
	  rules.  Automake already generates rules for such document
	  types.  This causes PDF documentation to be generated by
	  "texi2dvi --pdf" which is a good thing since the resulting PDF
	  file will contain a section menu and hyperlinks within the
	  document text.

	  Don't generate PostScript and HTML documentation by default.
	  Users can generate them if they want by invoking "make ps" or
	  "make html".

	* doc/examples/Makefile.am (example_DATA, EXTRA_DIST):

	  Replaced these variables with the equivalent single variable
	  "dist_example_DATA".

Mon Nov  8 02:22:02 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.4 released.

Mon Nov  8 02:21:21 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:

	  Updated list of noteworthy changes for MaRC 0.9.4.

	* configure.ac:

	  Bumped MaRC version to 0.9.4.

	* src/Makefile.am:

	  Commented out MaRC-specific lexer file compilation rule.  It is
	  no longer needed due to changes described below.

	* src/calc.cc:

	  Improved const-correctness.
	
	* src/lexer.ll:
	* src/parse_scan.h:
	* src/parse_scan.cc (yylex):

	  Disabled generation of a C++ scanner.  It forced a dependency on
	  the FlexLexer.h header, which may not be installed on all
	  user platforms.

	  Moved actions in old yylex code to scanner lexer.ll file, and
	  removed yylex() implementation.  The scanner generated yylex()
	  function will now suffice.

	* src/marc.cc:

	  Replaced all C++ scanner related calls with the C-based scanner
	  calls.

	* tests/MaRC_Prog_Test.sh:

	  New shell script that executes the MaRC program with a test
	  input file.  This is also used as another regression test.

	* tests/Makefile.am:

	  Added support for new MaRC_Prog_Test.sh script.

	* tests/test.fits.gz:
	* tests/test_map.inp:

	  Test source FITS file and MaRC input file to be used by
	  MaRC_Prog_Test.sh regression test.

Fri Nov  5 16:21:22 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* Makefile.am (SUBDIRS):

	  Added "tests" directory to the subdirectory list.

	* configure.ac:

	  Added "tests/Makefile" to the list of files to generate.

	* tests/Data_Type_Test.cpp:

	  New regression test that verifies data types supported by MaRC
	  have sizes expected by the FITS standard.

	* tests/NaN_Test.cpp:

	  New regression test that verifies the MaRC::NaN constant is
	  actually "Not-A-Number".

	* tests/Makefile.am (TESTS, check_PROGRAMS):

	  Added new regression tests to the list of tests to build and run
	  when performing a "make check".

Wed Nov  3 22:24:04 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.3 released.

Wed Nov  3 22:15:01 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Enhanced C library NaN constant detection to support additional
	  ways of retrieving the NaN constant.  Addresses build errors on
	  Solaris.

	  Bumped MaRC version to 0.9.3.

	* NEWS:

	  Updated list of noteworthy changes for MaRC 0.9.3.

	* lib/MaRC/Makefile.am:

	  Added new NaN.cpp file to the MaRC library source list.

	* lib/MaRC/NaN.h:

	  The MaRC::NaN constant is now defined externally rather than in
	  this header.

	* lib/MaRC/NaN.cpp:

	  New source file containing MaRC::NaN constant definition.

Tue Nov  2 23:19:46 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.2 released.

Tue Nov  2 23:15:24 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:

	  Updated list of noteworthy changes for MaRC 0.9.2.

Tue Nov  2 21:06:48 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/PolarStereographic.h:
	* lib/MaRC/PolarStereographic.cpp:
	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  New Polar Stereographic projection.

	* src/parse.yy:

	  Re-enabled Polar Stereographic projection support.

Tue Nov  2 14:11:46 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Check if socket and nsl libraries must be linked to pull in
	  socket support.  CFITSIO needs socket support for FTP and HTTP
	  file access.  These libraries are generally needed on Solaris.

	  Issue an error message if NaN support was not found.

	  Bumped MaRC version to 0.9.2.

Tue Nov  2 09:19:21 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/root_find.h:

	  New function template that determines the root of an equation
	  using the Newton-Raphson root finding method.

	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  Added new root_find.h header to the list of package headers.

Thu Oct 14 01:43:07 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  Added new Mercator projection files to this list.

	* lib/MaRC/Mercator.cpp:
	* lib/MaRC/Mercator.h:

	  New Transverse Mercator (conformal) projection.

	* lib/MaRC/OblateSpheroid.h (min_rad):

	  Removed this method.  It wasn't very useful since determining
	  the minimum of two radii is very easy.

	* lib/MaRC/Orthographic.cc:

	  Use std::{min,max}() rather than MaRC's deprecated {min,max}()
	  templates.

	* lib/MaRC/SimpleCylindrical.cc (get_longitude):
	* lib/MaRC/SimpleCylindrical.h (get_longitude):

	  Made this method "const".  There is no reason why shouldn't be
	  so.

	* lib/MaRC/misc.h:

	  Removed min() and max() function templates.  No need to
	  reproduce functionality already provided by their STL
	  counterparts std::min() and std::max().

	* src/parse.yy:

	  Enabled Mercator projection support.

Wed Oct 13 21:16:29 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9.1 released.

Wed Oct 13 21:09:01 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  Added missing "Matrix.h" and "Vector.h" headers.

Wed Oct 13 20:52:58 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac (MARC_BIN_VERSION, MARC_LIB_VERSION):

	  Do not hardcode these variable to "0.9".  Use the
	  AC_PACKAGE_VERSION macro instead.  Addresses problem where
	  incorrect version strings would be embedded in MaRC binaries.

Wed Oct 13 20:32:37 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:

	  Updated list of noteworthy changes for MaRC 0.9.1.

	* configure.ac:

	  Bumped MaRC version to 0.9.1.

Wed Oct 13 16:43:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/MapFactory.cc (plot):

	  Documented that data is clipped to fit within the map data type
	  range.

	* lib/MaRC/MosaicImage.h (is_zero):

	  New static method that determines if a datum should be
	  considered zero (i.e. zero if less than some very small
	  threshold).

	* lib/MaRC/MosaicImage.cc (is_zero):

	  Likewise.

	  (read_data):

	  Only average data point if it is non-zero since zero valued data
	  points generally correspond to "blank" areas in the image.
	  Addresses an averaging regression.

	* lib/MaRC/Orthographic.cc (make_map):

	  Shortened body/planet center output.

	* lib/MaRC/PhotoImage.cc (remove_sky):

	  Mask on-body zero/NaN image data points off the body.  Improves
	  quality of maps when mosaicing a set of images of which a given
	  image may contain gaps in the on-body data.  Note that the
	  source image data itself remains unchanged.

	  (read_data):

	  Fixed problem where disabling interpolation resulted in no data
	  being found in the image.

	* lib/MaRC/PhotoImage.h (read_data):

	  Use "true" instead of "1" as the default boolean argument for
	  this method.  They are equivalent but the former is more
	  modern.

	  Do not consider NaN data points as valid data.

	  Fixed weight computation code so that a weight is always
	  computed if weighted averaging is enabled by the user,
	  regardless of whether or not sky removal is enabled.  The
	  weights computed without sky removal are generally suitable for
	  most mosaic maps, and are determined very quickly.  Addresses
	  seams in image overlap regions in a mosaic map.

	  Simplified removed-sky scanning code by taking advantage of
	  the standard std::min() algorithm rather than use custom code
	  that did the same thing.

	* lib/MaRC/PhotoInterpolationStrategy.cpp (interpolate):

	  Do not perform interpolation on image pixels containing a
	  "not-a-number" (NaN) value.

	* lib/MaRC/Vector.h:

	  Cleaned up whitespace.

	* src/PhotoImageFactory.cpp:

	  Disable interpolation by default, as documented.

	* src/parse.yy:

	  Fixed a memory leak.

	* doc/MaRC_input.texi:

	  Updated documentation for "AVERAGING: NONE" feature to
	  correspond to the new behavior detailed above.

Wed Oct 13 02:22:27 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:
	* lib/Makefile.am (SUBDIRS, DIST_SUBDIRS):

	  Removed TNT directory from the directory list. It is no longer
	  used.

	* lib/MaRC/Matrix.h:
	* lib/MaRC/Vector.h:

	  New mathematical matrix and vector implementations.  They are
	  designed to be simple and fast, and are replacements for the
	  Template Numerical Toolkit implementations.  The new
	  implementations have are slightly faster than the TNT
	  implementations.

	* lib/MaRC/BodyData.h:

	  Updated doxygen documentation.

	* lib/MaRC/Geometry.cc:
	* lib/MaRC/Geometry.h:
	* lib/MaRC/OblateSpheroid.cc:
	* lib/MaRC/OblateSpheroid.h:
	* lib/MaRC/PhotoImage.cc:
	* lib/MaRC/PhotoImage.h:

	  Use new MaRC-specific matrix and vector implementations rather
	  than the slightly slower TNT implementations.

	* lib/imageio/Makefile.am:
	* lib/imageio/src/Makefile.am:
	* lib/imageio/src/image_io.cc:
	* lib/imageio/src/image_io.h:

	  Removed these files.  They are no longer used or needed.

	* lib/popt/AUTHORS:
	* lib/popt/COPYING:
	* lib/popt/COPYING.LIB:
	* lib/popt/ChangeLog:
	* lib/popt/INSTALL:
	* lib/popt/Makefile.am:
	* lib/popt/NEWS:
	* lib/popt/README:
	* lib/popt/aclocal.m4:
	* lib/popt/config.cache:
	* lib/popt/configure:
	* lib/popt/configure.in:
	* lib/popt/missing:
	* lib/popt/mkinstalldirs:
	* lib/popt/popt.c:
	* lib/popt/popt.h:
	* lib/popt/popt.ps:
	* lib/popt/popt.spec:

	  Removed these files.  They were never used.

	* lib/tnt/Makefile.am:
	* lib/tnt/tnt_cmat.h:
	* lib/tnt/tnt_subscript.h:
	* lib/tnt/tnt_vec.h:

	  Removed these files.  MaRC no longer uses any Template Numerical
	  Toolkit files.

Mon Oct 11 02:20:54 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* TODO

	  Removed items that have been completed.

	* lib/MaRC/MapFactory.h:

	  Nuked trailing whitespace.

	* lib/MaRC/OblateSpheroid.cc:
	* lib/MaRC/Orthographic.cc:
	* lib/MaRC/PhotoImage.cc:
	* src/parse.yy:

	  Improved error messages so that they include invalid values when
	  applicable.

	* src/PhotoImageFactory.cpp:

	  Likewise.

	  Fixed incorrect memory management of source and flat field image
	  arrays, i.e. use vector operator delete(), not scalar operator
	  delete() since the image arrays were allocated using the vector
	  (not to be confused with std::vector<>) version of operator
	  new().

Sun Oct 10 23:10:50 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Require GNU Automake 1.9.2 or better.  1.9.2 has greatly
	  improved Makefile.in templates.

	  No longer any need to determine and define 32 bit integer type.
	  That is now done at compile-time using C++ partial template
	  specialization techniques.

	* lib/MaRC/IfThenElse.h:

	  New template that allows one to select a type at compile-time
	  base on a given condition.

	* lib/MaRC/Long.h:

	  New header containing MaRC::Long typedef.  MaRC::Long is now
	  determined at compile-time rather than when the `configure'
	  script is executed.

	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  Added new IfThenElse.h and Long.h headers to the list of
	  MaRC package headers.

	* src/FITS_traits.h:

	  Include "MaRC/Long.h" to pull in MaRC::Long typedef.

	* src/lexer.ll:

	  Removed duplicate "IDENTITY" rule.

	* src/parse_scan.h:

	  #undef yyFlexLexer before including "FlexLexer.h".  This is
	  necessary to make it possible to use GNU Flex 2.5.31 generated
	  C++ scanners without "redefinition" compile-time errors.
	  Appears to be some "issues" with GNU Flex 2.5.31 generated C++
	  scanners.

Sun Oct 10 21:47:30 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Issue an error message and exit immediately if the CFITSIO
	  library is not found.  MaRC requires the CFITSIO library.

Tue Aug  3 17:06:38 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/GLLGeometricCorrection.h:
	* lib/MaRC/Image.h:
	* lib/MaRC/InterpolationStrategy.h:
	* lib/MaRC/MapFactory.h:
	* lib/MaRC/MosaicImage.h:
	* lib/MaRC/PhotoImage.h:
	* lib/MaRC/SimpleCylindrical.h:

	  Updated Doxygen documentation.

	* lib/MaRC/LongitudeImage.cc (read_data_i):

	  Wrap longitudes less than 0 and greater than or equal 360 into
	  the 0 to 360 degree longitude range.

	* src/MapCommand.cpp (execute):

	  Added FITS HISTORY comment regarding the type of projection the
	  grid extension image corresponds to.

	  Commented out FITS BLANK keyword support for grid image.  It
	  currently doesn't work as expected.

Tue Jul  6 20:44:34 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/InterpolationStrategy.h:

	  Improved Doxygen documentation.

	* lib/MaRC/LongitudeImage.cc (read_data_i):

	  Ensure that returned data falls within the 0-360 degree range.

	* lib/MaRC/NullInterpolationStrategy.cpp:
	* lib/MaRC/NullInterpolationStrategy.h:

	  Return data from given image without peforming interpolation
	  rather than do nothing at all.  Addresses problem where no data
	  was mapped when interpolation is disabled.

	* lib/MaRC/Orthographic.cc (initialized_):
	* lib/MaRC/Orthographic.h (initialized_):

	  New flag that is set to "true" if the Orthographic projection
	  instance has been fully initialized.

	* lib/MaRC/PhotoImage.cc:

	  Updated NullInterpolationStrategy constructor arguments to match
	  the latest updates to that class constructor.

	  (read_data):

	  Verify that retrieved data is not the NaN "not-a-number"
	  constant before returning it to the caller.

	* lib/MaRC/PhotoInterpolationStrategy.cpp:

	  Verify that the data being interpolated is not the NaN
	  "not-a-number" constant before interpolating it.

	* src/MapCommand.cpp (execute):

	  Added HISTORY keyword to grid extension image containing
	  projection name.

Tue Jul  6 02:12:27 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* MaRC 0.9 released.

Tue Jul  6 01:56:45 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Updated bug reporting address to my SourceForge e-mail address.

	  Do not require that the user have GNU Bison and Flex installed.
	  Only maintainers need those tools.

	* NEWS:

	  Updated with summary of changes in MaRC 0.9.

	* src/Command.h:

	  Removed this unused file.

	* src/Makefile.am (noinst_HEADERS):

	  Added missing headers.  Addresses "distcheck" make target
	  failures.

	* src/MapCommand.cpp:

	  Include <unistd.h> to pull in unlink() function prototype.

	* src/parse_scan.h:

	  Corrected "ValuePtr.h" include.  "MaRC/ValuePtr.h", not
	  "ValuePtr.h".

Tue Jul  6 00:46:25 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* src/MapCommand.cpp (execute):

	  Fixed FITS "AUTHOR" and "ORIGIN" keyword creation CFITSIO
	  calls.  The code incorrectly took the address of the pointer to
	  the string.  There was no need to take the address.

	* src/lexer.ll:

	  Fixed "AUTHOR" and "ORIGIN" token actions so that a string
	  containing spaces is considered a single lexeme rather than
	  multiple ones.

Tue Jul  6 00:12:32 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/PhotoImage.cc (read_data):

	  Corrected code flow so that weighted average scan is executed
	  when requested.  Addresses some mosaic artifacts.

	* lib/MaRC/PhotoInterpolationStrategy.cpp:

	  Fixed right sample and bottom line limits.  There is no need to
	  subtract one from them.

	* src/MapCommand.cpp (execute):

	  Unlink (erase) the output FITS file before attempting to create
	  it.  CFITSIO complains about existing files.

	* src/MapCommand_T.cpp (make_map_planes):

	  Update the FITS array offset "fpixel" after writing each image
	  plane by the number of elements in each plane.  Fixes a problem
	  where map data was only written to the first plane in the FITS
	  array.

Mon Jul  5 23:04:10 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/Orthographic.cc:
	* lib/MaRC/Orthographic.h:

	  Updated to conform to current MapFactory<> base class
	  interface.

	* lib/MaRC/SimpleCylindrical.cc:
	* lib/MaRC/SimpleCylindrical.h:

	  Cleaned up BodyData memory management by taking of ValuePtr<>
	  template class.

	* src/PhotoImageFactory.cpp (make):

	  Added FITS routine error reporting.

	* src/parse.yy:

	  Reenabled orthographic correction.

	  Updated type of BodyData argument passed to SimpleCylindrical<>
	  template class constructor to match changes described above.

Mon Jul  5 17:01:08 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac (AC_CONFIG_SRCDIR):

	  Changed source file argument to this autoconf macro to
	  "lib/MaRC/PhotoImage.h".  The previously used file no longer
	  exists.

	* lib/MaRC/CosPhaseImage.cc:
	* lib/MaRC/Mu0Image.cc:
	* lib/MaRC/MuImage.cc:

	  Convert degree values to radians.  Fixes problem where no data
	  could be mapped.

	  Initialize VirtualImage base class with a scale value of 10000.
	  This will be hardcoded for now.  Flexibility will be addressed
	  at a later date.

	* lib/MaRC/CosPhaseImage.h:
	* lib/MaRC/Mu0Image.h:
	* lib/MaRC/MuImage.h:

	  Improved constructor parameter documentation.

	* lib/MaRC/GeometricCorrection.h:
	* lib/MaRC/InterpolationStrategy.h:
	* lib/MaRC/PhotometricCorrection.h:

	  Added MaRC::VP_traits<>::clone() template specialization that
	  copies objects polymorphically, thus avoiding "slicing".

	* lib/MaRC/GLLGeometricCorrection.cc (clone):
	* lib/MaRC/GLLGeometricCorrection.h (clone):
	* lib/MaRC/NullGeometricCorrection.cc:
	* lib/MaRC/NullGeometricCorrection.h:
	* lib/MaRC/NullInterpolationStrategy.cpp:
	* lib/MaRC/NullInterpolationStrategy.h:
	* lib/MaRC/NullPhotometricCorrection.cc:
	* lib/MaRC/NullPhotometricCorrection.h:
	* lib/MaRC/PhotoInterpolationStrategy.cpp:
	* lib/MaRC/PhotoInterpolationStrategy.h:

	  Added this method to allow the corresponding class to be used
	  correctly in a MaRC::ValuePtr<> template class.

	* lib/MaRC/Grid.cc:
	* lib/MaRC/Grid.h:

	* lib/MaRC/Map.cc:
	* lib/MaRC/Map.h:
	* lib/MaRC/Image.cpp:
	* lib/MaRC/Image.h:
	* lib/MaRC/MapFactory.h:

	  Renamed MaRC::Map<> template class to MaRC::Image<>.  There was
	  nothing map-specific about the class.

	* lib/MaRC/MapFactory.cc:

	  Cast unsigned char percentage value to an unsigned int before
	  printing it to make sure a numerical value is printed, not the
	  corresponding ASCII character.

	  Reset cached old percentage value to zero upon reaching 100% to
	  allow progress output to be displayed in subsequent mapping
	  calls through the same MapFactory<> concrete instance.

	* lib/MaRC/Map_traits.h:

	  New file containing traits used by MapFactory<> class when
	  plotting data.

	* lib/MaRC/Orthographic.cc:
	* lib/MaRC/Orthographic.h:
	* lib/MaRC/SimpleCylindrical.cc:
	* lib/MaRC/SimpleCylindrical.h:

	  Samples and lines are now passed to the make_make() method
	  rather than stored in the object itself.

	  Implemented clone() method as now required by the MapFactory<>
	  base class.

	* lib/MaRC/PhotoImage.h:

	  Replaced strategy pointer members with their corresponding
	  "ValuePtr-ified" counterparts.  Addresses memory management
	  issues that occur when using the compiler generated copy
	  constructor or assignment operator.

	* lib/MaRC/PhotoImage.cc:

	  Fixed error that prevented the correct rotation matrix from
	  being selected.

	* lib/MaRC/SourceImage.cc:
	* lib/MaRC/SourceImage.h:

	  Removed unused minimum/maximum attributes and corresponding
	  accessor and mutator methods.  They were unused and don't belong
	  in this class.

	* lib/MaRC/VirtualImage.cc:
	* lib/MaRC/VirtualImage.h:

	  Scale and offset retrieved data by configured amounts.
	  Allows fractional data values to be stored in integer type
	  maps.

	* lib/MaRC/Makefile.am:

	  Removed obsolete Map.* files and added new Image.* and
	  Map_traits.h files to the appropriate source/header lists.

	* lib/tnt/tnt_cmat.h:
	* lib/tnt/tnt_vec.h:

	  Improved efficiency slightly and removed redundant null pointer
	  checks.

	* src/MapCommand.cpp:

	  Corrected order of CFITSIO calls.  Addresses problem where image
	  was not written to the output FITS file.

	* src/MapCommand.h (initialize_FITS_image):

	  New pure virtual method all concrete MapCommand classes must
	  implement.

	* src/MapCommand_T.cpp:
	* src/MapCommand_T.h:

	  Implemented type-specific initialize_FITS_image() virtual
	  method.

	  Improved map progress output.

	* src/PhotoImageFactory.cpp (make):

	  Removed debugging output.

	* src/lexer.ll:

	  Corrected problem where generated scanner did not recognize
	  LATITUDE_TYPE keyword token and/or its arguments.

	* src/marc.cc:

	  Nuked trailing whitespace.

	* src/parse.yy:

	  Removed debugging output.

	  Deallocate string lexeme memory since such lexemes are copied
	  from the scanner's lexeme string buffer.

	  Fixed problem where minimum/maximum values were set to zero when
	  no such values were by the user.

	* src/parse_scan.cc:

	  Copy the string lexeme from the scanner before returning the
	  token.  Fixes problem where string values were overwritten
	  during subsequent scanner calls by the parser.

Sat Jul  3 23:39:23 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/Map.h (minimum, maximum):

	  Added these Map_traits<> functions.  The idea behind this trait
	  is to prevent data that is actually outside the valid data range
	  of the map data type from being * mapped.  In particular, the
	  minimum value is "clipped" if necessary.

	* lib/MaRC/MapFactory.h:

	  Cosmetic change.  Renamed template parameter from "DATA_TYPE" to
	  "T".  The former cluttered the code too much.

	* lib/MaRC/MapFactory.cc (plot):

	  Clip the minimum and maximum values if necessary via the new
	  Map_traits<>::{minimum,maximum}() to make sure the retrieved
	  data can actually be represented properly in the map data type,
	  i.e. falls within the map data type range of valid values.

	  Cast the percent_complete unsigned char variable to an unsigned
	  int when outputing the progress message at the 20% intervals.
	  Fixes a problem ASCII characters were printed instead of the
	  numerical values.

	* lib/MaRC/PhotoImage.cc:

	  Cosmetic change.  Indent code according to MaRC conventions.

	* src/PhotoImageFactory.cpp (make):

	  Corrected first column and row pixel values.  Addresses an error
	  issued by CFITSIO.

	* src/lexer.ll:

	  Removed spurious spaces that were causing GNU Flex to generate
	  incorrect token values in the generated scanner.

	* src/marc.cc (main):

	  Catch C++ exceptions and display the message contained with
	  them.  Return -1 immediately after.

	* src/parse.yy:
	* src/parse_scan.cc:
	* src/parse_scan.h:

	  Updated to work with GNU Bison 1.875 generated parsers.  The
	  changes are not backward compatible with most earlier versions
	  of GNU Bison, nor other yacc implementations.

Sat Jul  3 16:06:53 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/Map.cc:
	* lib/MaRC/Map.h:

	  Introduced new Map_traits<> template structure.  The Map<T>
	  template now delegates map initialization to the
	  Map_traits<>::initialize_map() method.  This allows for
	  simplification the floating point specializations.

	* lib/MaRC/ValuePtr.h:

	  Doxygen improvements.

	* lib/MaRC/Map_S.cpp:
	* lib/MaRC/Makefile.am (libMaRC_la_SOURCES):

	  Removed Map_S.cpp from the MaRC library sources.  It is no
	  longer needed due to the introduction of the Map_traits<>
	  template structure.

	* src/parse.yy:

	  Moved projection_type rule back to its original place in the map
	  grammar.  Fixes a backward compatibility issue.  The reason for
	  breaking backward compatibility no longer exists.

Sat Jul  3 05:45:29 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* src/parse.yy:

	  Added missing YYLEX_PARAM preprocessor macro/constant
	  definition.  The reentrant parser parameter cannot be passed to
	  the yylex() scanner call without it.

	* src/parse_scan.h (yylex):
	* src/parse_scan.cc (yylex):

	  Added third "YYLEX_PARAM" parameter.  Addresses illegal
	  instruction signal caused by incorrectlty casting unrelated
	  types to each other.  Parsing once again works.

Sat Jul  3 05:31:27 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/ValuePtr.h:
	* src/PhotoImageFactory.cpp:

	  GNU g++ 3.4 fixes.  In particular, added missing #includes.

Sat Jul  3 05:10:08 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* src/Makefile.am:

	  Patch generated C++ scanner to fix incorrect call to C++
	  operator delete().  The vector operator delete[]() should have
	  been called instead.  Addresses a memory violation.

Sat Jul  3 04:24:08 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* src/marc.cc (main):

	  Added missing code that executes MapCommand objects.

Sat Jul  3 04:07:05 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/Makefile.am (DIST_SUBDIRS):

	  Include "tnt" subdirectory in distribution.  The MaRC library
	  currently depends on some of its headers.

	* lib/MaRC/Makefile.am (pkginclude_HEADERS):

	  Added missing template source files.

Tue Jun 29 21:57:59 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Added virtual method definition in covariant return type test.
	  A declaration alone is not enough if we ever decide to turn the
	  test into a link-time test instead of the current compile-time
	  test.

	* lib/MaRC/BodyData.h:
	* lib/MaRC/CosPhaseImage.cc:
	* lib/MaRC/CosPhaseImage.h:
	* lib/MaRC/Geometry.cc:
	* lib/MaRC/Geometry.h:
	* lib/MaRC/Grid.h:
	* lib/MaRC/LatitudeImage.cc:
	* lib/MaRC/LatitudeImage.h:
	* lib/MaRC/Makefile.am:
	* lib/MaRC/Map.cc:
	* lib/MaRC/Map.h:
	* lib/MaRC/MapFactory.cc:
	* lib/MaRC/MapFactory.h:
	* lib/MaRC/Map_S.cpp:
	* lib/MaRC/MosaicImage.cc:
	* lib/MaRC/MosaicImage.h:
	* lib/MaRC/Mu0Image.cc:
	* lib/MaRC/Mu0Image.h:
	* lib/MaRC/MuImage.cc:
	* lib/MaRC/MuImage.h:
	* lib/MaRC/NullPhotometricCorrection.cc:
	* lib/MaRC/NullPhotometricCorrection.h:
	* lib/MaRC/OblateSpheroid.cc:
	* lib/MaRC/OblateSpheroid.h:
	* lib/MaRC/Orthographic.h:
	* lib/MaRC/PhotoImage.cc:
	* lib/MaRC/PhotoImage.h:
	* lib/MaRC/PhotometricCorrection.h:
	* lib/MaRC/SimpleCylindrical.cc:
	* lib/MaRC/SimpleCylindrical.h:
	* lib/MaRC/SourceImage.cc:
	* lib/MaRC/SourceImage.h:
	* lib/MaRC/ValuePtr.h:
	* lib/MaRC/VirtualImage.h:
	* src/CosPhaseImageFactory.cpp:
	* src/CosPhaseImageFactory.h:
	* src/FITS_traits.h:
	* src/ImageFactory.cpp:
	* src/ImageFactory.h:
	* src/LatitudeImageFactory.cpp:
	* src/LatitudeImageFactory.h:
	* src/LongitudeImageFactory.cpp:
	* src/LongitudeImageFactory.h:
	* src/Makefile.am:
	* src/MapCommand.cpp:
	* src/MapCommand.h:
	* src/MapCommand_T.cpp:
	* src/MapCommand_T.h:
	* src/MosaicImageFactory.cpp:
	* src/MosaicImageFactory.h:
	* src/Mu0ImageFactory.cpp:
	* src/Mu0ImageFactory.h:
	* src/MuImageFactory.cpp:
	* src/MuImageFactory.h:
	* src/PhotoImageFactory.cpp:
	* src/PhotoImageFactory.h:
	* src/calc.cc:
	* src/calc.h:
	* src/lexer.ll:
	* src/marc.cc:
	* src/parse.yy:
	* src/parse_scan.cc:
	* src/parse_scan.h:

	  Completed initial phase of MaRC overhaul.  MaRC finally compiles
	  and links without error.  Run-time testing will follow.

	* lib/MaRC/image.cc:
	* lib/MaRC/image.h:
	* src/marc_t.cc:

	  Remove these unused and obsolete files.

Mon Jun 28 22:03:45 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Added GNU Libtool support.

	  Added test to detect CFITSIO library.

	  Added test to detect support for C++ covariant return types.

	  Enhanced NaN test to use nan() C math library function if NAN
	  preprocessor constant is not defined.

	  Define "_ISOC99_SOURCE" preprocessor symbol on command line to
	  enable not-a-number support on some platforms.

	* lib/MaRC/GLLGeometricCorrection.h:

	  Further Doygenation.

	* lib/MaRC/InterpolationStrategy.h:
	* lib/MaRC/NullInterpolationStrategy.cpp:
	* lib/MaRC/NullInterpolationStrategy.h:
	* lib/MaRC/PhotoInterpolationStrategy.cpp:
	* lib/MaRC/PhotoInterpolationStrategy.h:

	  Strategized photo data interpolation.  One strategy performs no
	  interpolation, while the other performs bilinear interpolation.
	  Strategizing allows the code in PhotoImage.cc to be simplified.

	* lib/MaRC/PhotoImage.cc:
	* lib/MaRC/PhotoImage.h:

	  Removed do_interpolation().  Interpolation is now strategized as
	  described above.

	  Commented out unused minimum/maximum latitude/longitude code.
	  The code is part of an unfinished optimization when sky removal
	  is enabled.  Disable for now, and revisit at a later date.

	  Improved Doxygen documentation.

	  Replaced strange nibble() methods that accepted a side
	  enumeration value with individual
	  nibble_{left,right,top,bottom}() methods.  The code is cleaner
	  this way.

	  Removed code from latlon2pix() method that was not related to
	  latitude/longitude-to-pixel conversion.

	  Store and use new interpolation strategy rather than performing
	  an "if (interpolate)" each time data is read from the image.

	  Fixed bug in code that scans for averaging weights in
	  read_data() method that prevented some candidates for those
	  weights from being considered.

	* lib/MaRC/NaN.h (NaN):

	  Removed unnecessary scope qualifier.

	  If NAN preprocessor macro is not defined, set MaRC:NaN to return
	  value of nan() C math library function instead.

	* lib/MaRC/Makefile.am:

	  Added new interpolation strategy files to the source lists.

	  Added GNU Libtool support.

Thu Jun 24 11:49:17 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* src/MapCommand.h:

	  New file containing bstract base class to be subclassed by
	  concrete MaRC Command classes.

	* src/parse.yy:

	  Corrected a number of syntax errors.

	  Revised rules and actions for mosaic images to correct
	  "unreduced rules and useless non-terminal symbol" error from
	  GNU Bison.

	* src/parse_scan.h (commands):

	  Returned "Commands" reference should be const.  Fixes a
	  compile-time error.

Thu Jun 17 21:19:24 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Updated copyright information.

	* doc/MaRC_input.texi:

	  Updated copyright information.

	  Removed deprecated PLANES keyword and plane numbers.

	  Clarified some text.

	* doc/examples/101.inp:
	* doc/examples/mumu0.test.inp:

  	  Removed deprecated PLANES keyword and plane numbers.

	  Replaced useless comments with more meaningful ones.

	* lib/MaRC/MapFactory.h:
	* lib/MaRC/MapFactory.cc:

	  Do not store pointer to SourceImage in MapFactory class.  Pass
	  it to make_map() method instead.  Allows a single MapFactory
	  instance to create maps from multiple different sources.

	  (plot):

	  Accept reference to SourceImage parameter and retrieve data from
	  that SourceImage instance rather than the no longer existent
	  cached SourceImage instance.

	  Return read data by value instead through a reference
	  parameter.  Provides for cleaner code.  Returning through a
	  reference parameter didn't buy us much.

	  (make_grid):

	  This method now accepts latitude and longitude grid interval
	  values instead of a single grid interval value.

	* lib/MaRC/Orthographic.cc:
	* lib/MaRC/Orthographic.h:
	* lib/MaRC/SimpleCylindrical.cc:
	* lib/MaRC/SimpleCylindrical.h:

	  Updated in accordance with changes make to MapFactory<>
	  interface.

	* lib/MaRC/PhotoImage.h:

	  Updated doxygen documentation.

	* lib/MaRC/PhotoImage.cc:

	  Minor code cleanup.

	* src/Command.h:

	  Interface for new Command object, a chain of which will be
	  constructed by the MaRC parser.

	* src/Makefile.am (marc_SOURCES):

	  Added parser source to the MaRC source list.

	* src/calc.cc:
	* src/calc.h:

	  Cleaned up some code.

	  Use an STL map<> instead of rolling our own map functionality.

	* src/lexer.ll:

	  Removed support for long deprecated "XSIZE" and "YSIZE"
	  keywords.

	  Updated returned tokens in accordance with changes made to the
	  MaRC parser.

	* src/marc_t.cc:

	  Added missing "std" namepace scope qualifier to STL container
	  declarations.

	* src/parse.yy:

	  Reordered some keywords to make map factory construction
	  easier.

	  Removed support for long deprecated "XSIZE" and "YSIZE"
	  keywords.

	  Renamed some tokens so that they do not conflict with MaRC
	  library symbols.

	  Disabled all map projections except Simple Cylindrical.  The
	  others have not been ported to the latest design and
	  implementation.

	* src/parse_scan.cc:
	* src/parse_scan.h:

	  Cleaned up code.

	  Do not use GNU C++ FlexLexer class.  It imposes an unnecessary
	  dependency on the GNU C++ lexer library.

	  Store Command list for execution at the appropriate time.

Sat Jun 12 20:43:11 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Check for GNU flex library is no longer needed.  Removed it.

	  Replaced all uses of "-mcpu" GNU C/C++ command line option with
	  "-mtune".  The former is deprecated.

Fri Jun 11 21:09:08 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* Doxyfile:

	  Doxygen configuration file MaRC library documentation.

	* lib/MaRC/NaN.h:

	  New header containing "not-a-number" constant.

Fri Jun 11 21:01:20 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Added check for NaN "not-a-number" constant.

	* lib/Makefile.am (SUBDIRS):

	  Removed `imageio' directory from the subdirectory list.  It is
	  no longer used.

	* lib/MaRC/Constants.h:

	  Made "C" struct containing constants a C++ namespace instead.

	  All constants are now declared and defined in this header.

	* lib/MaRC/Constants.cc:

	  Removed this file.  It is no longer used.

	* lib/MaRC/Makefile.am:

	  Added new source files to the list of MaRC library sources.

	* lib/MaRC/Map.cc:
	* lib/MaRC/Map.h:

	  Use a std::valarray<> as the underlying data type instead of a
	  raw array.  Allows for optimized operations on the entire
	  array.

	* lib/MaRC/MapFactory.h (make_grid):
	* lib/MaRC/SimpleCylindrical.cc:
	* lib/MaRC/SimpleCylindrical.h:

	  Added a grid interval parameter to allow users to configure the
	  distance between grid lines.

	* lib/MaRC/MinnaertPhotometricCorrection.cc:

	  Minnaert photometric correction strategy placeholder.

	* lib/MaRC/MosaicImage.cc (read_data):

	  Declare some local constants as static.  Their values never
	  change between function calls.

	* lib/MaRC/MosaicImage.h (MosaicImage):

	  Added missing "public" class inheritance type.

	* lib/MaRC/OblateSpheroid.cc:

	  Factored out some repeated multiplications and trigonmetric
	  function calls so that they are only performed once.  Improves
	  performance.

	* lib/MaRC/Orthographic.cc:

	  Improved variable name style consistency.

	  Cleaned up some code.

	* lib/MaRC/Orthographic.h:

	  Added missing class attributes.

	* lib/MaRC/PhotoImage.cc (remove_sky):

	  Since sky_mask_ is an array of bool, assign value of "true"
	  instead of "1" for the sake of consistency, although the latter
	  works just as well.

	* lib/MaRC/PhotoImage.h (use_terminator):

	  Added documentation.

	* lib/MaRC/albeqv1.cc:
	* lib/MaRC/albeqv1.h:
	* lib/MaRC/albeqv2.cc:
	* lib/MaRC/albeqv2.h:
	* lib/MaRC/bodydata.cc:
	* lib/MaRC/bodydata.h:
	* lib/MaRC/conformal.cc:
	* lib/MaRC/conformal.h:
	* lib/MaRC/cosine_strategy.cc:
	* lib/MaRC/cosine_strategy.h:
	* lib/MaRC/equivalent.cc:
	* lib/MaRC/equivalent.h:
	* lib/MaRC/geomcorr.h:
	* lib/MaRC/geometry.cc:
	* lib/MaRC/geometry.h:
	* lib/MaRC/gllgcor.cc:
	* lib/MaRC/gllgcor.h:
	* lib/MaRC/hstgcor.cc:
	* lib/MaRC/hstgcor.h:
	* lib/MaRC/identity.cc:
	* lib/MaRC/identity.h:
	* lib/MaRC/image.cc:
	* lib/MaRC/image.h:
	* lib/MaRC/lamcnf1.cc:
	* lib/MaRC/lamcnf1.h:
	* lib/MaRC/lamcnf2.cc:
	* lib/MaRC/lamcnf2.h:
	* lib/MaRC/lamcyleq.cc:
	* lib/MaRC/lamcyleq.h:
	* lib/MaRC/lampoleq.cc:
	* lib/MaRC/lampoleq.h:
	* lib/MaRC/map_convert_strategy.cc:
	* lib/MaRC/map_convert_strategy.h:
	* lib/MaRC/map_lib.cc:
	* lib/MaRC/map_lib.h:
	* lib/MaRC/mapinfo.cc:
	* lib/MaRC/mapinfo.h:
	* lib/MaRC/maps.cc:
	* lib/MaRC/maps.h:
	* lib/MaRC/mercator.cc:
	* lib/MaRC/mercator.h:
	* lib/MaRC/minnaert.cc:
	* lib/MaRC/minnaert.h:
	* lib/MaRC/nullgcor.h:
	* lib/MaRC/oblate_spheroid.cc:
	* lib/MaRC/oblate_spheroid.h:
	* lib/MaRC/ortho.cc:
	* lib/MaRC/ortho.h:
	* lib/MaRC/other.cc:
	* lib/MaRC/other.h:
	* lib/MaRC/p_stereo.cc:
	* lib/MaRC/p_stereo.h:
	* lib/MaRC/perspect.cc:
	* lib/MaRC/perspect.h:
	* lib/MaRC/photo_strategy.h:
	* lib/MaRC/photocorr.h:
	* lib/MaRC/simple_c.cc:
	* lib/MaRC/simple_c.h:
	* lib/MaRC/sinusoid.cc:
	* lib/MaRC/sinusoid.h:
	* lib/MaRC/sourceimg.cc:
	* lib/MaRC/sourceimg.h:

	  Coding style updates.

	* lib/imageio/src/Makefile.am:

	  Start comments in column 1.

	* src/Makefile.am:

	  Removed AIPS_LIB related variables.  They are no longer used.

	* src/lexer.ll:

	  Nuked trailing whitespace.

Thu Nov 20 11:37:59 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  Fixed some M4 quoting issues.

	  Commented out references to the TNT source library.

	* doc/MaRC_input.texi:

	  Corrected typo.

	* doc/Makefile.am:

	  Added support for new MaRC man page.  The man page will now be
	  installed in the appropriate location when performing a "make
	  install".

	  Install documentation in $(prefix)/share/doc instead of
	  $(prefix)/doc.  The latter is more in line with current
	  directory conventions.

	* doc/marc.1:

	  New MaRC man page.

	* doc/marc.1.in:

	  Removed old MaRC man page.

	* doc/examples/Makefile.am:

	  Install examples in $(prefix)/share/doc/... instead of
	  $(prefix)/doc/...  The latter is more in line with current
	  directory conventions.

	* src/OBSOLETE/list.h:
	* src/OBSOLETE/listnode.h:
	* src/OBSOLETE/queue.h:
	* src/OBSOLETE/stack.h:

	  Removed these obsolete files.

Sun Oct 26 20:29:36 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/misc.h (flags):

	  Moved "flags" namespace into MaRC namespace to prevent potential
	  application namespace pollution.

Sun Oct 26 20:23:32 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	The following changes reflect a major overhaul of the core MaRC
	library.

	* lib/MaRC/BodyData.cc:
	* lib/MaRC/BodyData.h:

	  Body data abstract base class.

	* lib/MaRC/OblateSpheroid.cc:
	* lib/MaRC/OblateSpheroid.h:

	  Oblate spheroid concrete MaRC::BodyData class.

	* lib/MaRC/Constants.cc:

	  Nuked trailing whitespace.

	* lib/MaRC/Geometry.cc:
	* lib/MaRC/Geometry.h:

	  Geometry related (e.g. rotation matrix factories) static
	  functions.

	* lib/MaRC/Map.cc:
	* lib/MaRC/Map.h:

	  New encapsulation for map arrays.

	* lib/MaRC/Grid.cc:
	* lib/MaRC/Grid.h:

	  New encapsulation for grid arrays.

	* lib/MaRC/GeometricCorrection.cc:
	* lib/MaRC/GeometricCorrection.h:

	  Abstract base class for all geometric correction (e.g. lens
	  aberration) concrete classes.

	* lib/MaRC/GLLGeometricCorrection.cc:
	* lib/MaRC/GLLGeometricCorrection.h:

	  Redesigned Galileo spacecraft lens aberration correction
	  implementation.

	* lib/MaRC/NullGeometricCorrection.cc:
	* lib/MaRC/NullGeometricCorrection.h:

	  Null (no-op) geometric correction implementation.

	* lib/MaRC/PhotometricCorrection.cc:
	* lib/MaRC/PhotometricCorrection.h:

	  Abstract base class for all photometric correction concrete
	  classes.

	* lib/MaRC/NullPhotometricCorrection.cc:
	* lib/MaRC/NullPhotometricCorrection.h:

	  Null (no-op) photometric correction implementation.

	* lib/MaRC/SourceImage.cc:
	* lib/MaRC/SourceImage.h:

	  Abstract base class for all source images.

	* lib/MaRC/PhotoImage.cc:
	* lib/MaRC/PhotoImage.h:

	  Concrete SourceImage implementation for digital photographs.

	* lib/MaRC/MosaicImage.cc:
	* lib/MaRC/MosaicImage.h:

	  New concrete SourceImage implementation that mosaics multiple
	  PhotoImages.  This code was formerly contained in the map
	  plotting code.  Moving the code into a separate concrete
	  SourceImage class simplifies the map plotting code and makes
	  both the mosaicing and map plotting code more coherent.

	* lib/MaRC/VirtualImage.cc:
	* lib/MaRC/VirtualImage.h:

	  Abstract base class for dynamically generated source images,
	  i.e. those that are computed on-the-fly.

	* lib/MaRC/CosPhaseImage.cc:
	* lib/MaRC/CosPhaseImage.h:
	* lib/MaRC/Mu0Image.cc:
	* lib/MaRC/Mu0Image.h:
	* lib/MaRC/MuImage.cc:
	* lib/MaRC/MuImage.h:

	  Overhauled virtual image implementations for the cosines of
	  emission, incidence, and phase angle planes.

	* lib/MaRC/LatitudeImage.cc:
	* lib/MaRC/LatitudeImage.h:
	* lib/MaRC/LongitudeImage.cc:
	* lib/MaRC/LongitudeImage.h:

	  Virtual image implementations for the new latitude and longitude
	  planes.

	* lib/MaRC/MapFactory.cc:
	* lib/MaRC/MapFactory.h:

	  New map factory abstract base class.  All concrete map
	  projection classes must subclass this class.

	* lib/MaRC/Orthographic.cc:
	* lib/MaRC/Orthographic.h:
	* lib/MaRC/SimpleCylindrical.cc:
	* lib/MaRC/SimpleCylindrical.h:

	  Redesigned optimized orthographic and simple cylindrical
	  projection/map factories.

	* lib/MaRC/Makefile.am:

	  Updated source file list with latest filenames.

	* lib/MaRC/tnt/Makefile.am:
	* lib/MaRC/tnt/blas.h:
	* lib/MaRC/tnt/cholesky.h:
	* lib/MaRC/tnt/cmat.h:
	* lib/MaRC/tnt/fcscmat.h:
	* lib/MaRC/tnt/fmat.h:
	* lib/MaRC/tnt/fortran.h:
	* lib/MaRC/tnt/fspvec.h:
	* lib/MaRC/tnt/index.h:
	* lib/MaRC/tnt/lapack.h:
	* lib/MaRC/tnt/lu.h:
	* lib/MaRC/tnt/qr.h:
	* lib/MaRC/tnt/region1d.h:
	* lib/MaRC/tnt/region2d.h:
	* lib/MaRC/tnt/stpwatch.h:
	* lib/MaRC/tnt/subscrpt.h:
	* lib/MaRC/tnt/tnt.h:
	* lib/MaRC/tnt/tntcmplx.h:
	* lib/MaRC/tnt/tntmath.h:
	* lib/MaRC/tnt/tntreqs.h:
	* lib/MaRC/tnt/transv.h:
	* lib/MaRC/tnt/triang.h:
	* lib/MaRC/tnt/trislv.h:
	* lib/MaRC/tnt/vec.h:
	* lib/MaRC/tnt/vecadaptor.h:
	* lib/MaRC/tnt/version.h:

	  Removed these files.  MaRC no longer uses the Template Numerical
	  Toolkit (TNT) library.

Sun Oct 26 00:04:15 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* configure.ac:

	  New Autoconf 2.57 (or better) input file for the overall MaRC
	  distribution.

	* acconfig.h:
	* configure.in:

	  Removed these files.  The functionality of both is now in the
	  new `configure.ac' file.

	* NEWS:

	  Updated change summary.

Sun Oct 26 00:01:45 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* doc/MaRC_input.texi:

	  Added documentation for new LATITUDE and LONGITUDE planes.

	  Take advantage of cross-references to improve documentation.

	  Corrected spelling and misplaced words.

	  Updated copying terms to use the GNU Free Documentation License.

	* doc/fdl.texi:

	  GNU Free Documentation License terms and conditions.  MaRC
	  documentation is now licensed on the GFDL.

	* doc/mdate-sh:
	* doc/texinfo.tex:

	  Removed these generated files.  They created/linked by
	  Automake.

Wed Sep 24 01:15:24 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* lib/MaRC/photo_strategy.cc (RotMatrices):

	  Fixed bug where cached "observer to body" and "body to observer"
	  matrices were used in computations instead of those passed into
	  this method.

Tue Aug 10 11:21:46 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/MaRC/oblate_spheroid.cc (EllipseIntersection):

	  Fixed latitude computation.  This fixes a bug that appeared when
	  making a perspective projection.

Fri Aug  6 22:03:57 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/MaRC/perspect.cc (Map):

	  Corrected line iteration code.  The change in sign is no longer
	  needed.

	* lib/MaRC/oblate_spheroid.h:
	* lib/MaRC/oblate_spheroid.cc (EllipseIntersection):

	  Made vectors that are passed to EllipseIntersection routine
	  constant.  They shouldn't be modified by the routine so make
	  sure they are passed as constants to it.

Thu Aug  5 11:54:21 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/MaRC/perspect.cc (Map):

	  Must change sign of map line before performing transformation.
	  TODO: Why is this necessary?

	* lib/MaRC/perspect.cc (Perspective):

	  Fixed assumption that vector to center of body and optical axis
	  were colinear.

Mon May 17 18:48:22 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/MaRC/hstgcor.cc (HST_GeomCorrect):

	  Added missing D10 coefficients from errata web site.

	* lib/MaRC/geometry.{h,cc}:

	  Placed geometry related functions into their own namespace.

	* lib/MaRC/tnt:

	  Moved TNT headers into the above directory, and updated to
	  TNT 0.9.1.

	* lib/MaRC/Constants.{h,cc}:

	  Moved AIPS++ source containing the constants MaRC uses into the
	  above directory.  This is the only part of AIPS++ that MaRC still
	  uses.

Sun May 16 14:41:55 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/photocorr.h:
	* lib/map/minnaert.h:
	* lib/map/nullpcor.h

	  Started to strategize photometric correction techniques.  This
	  file defines the base class from which all photometric correction
	  strategies should be derived.

	* lib/map/nullgcor.{h,cc}:

	  Implemented a "null" geometric correction strategy.  This strategy
	  will be the default geometric correction strategy if one isn't
	  set by the user.  No correction is done by this strategy, hence the
	  use of "null."

Sat May 15 19:23:31 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/geomcorr.h:
	* lib/map/gllgcor.{h,cc}:
	* lib/map/hstgcor.{h,cc}:

	  Strategized optical/geometric distortion routines.  Also implemented
	  geometric correction for Hubble Space Telescope Wide Field and
	  Planetary Camera 2 (WFPC2) images.

Mon May 10 19:28:54 1999  Ossama Othman  <othman@cs.wustl.edu>

	* README:

	  Requirement updates.

	* lib/map/bodydata.{cc.h}:
	* lib/map/oblate_spheroid.{cc.h}:

	  Split oblate spheroid specific methods into a seperate
	  OblateSpheroid class that is derived from what is now the BodyData
	  base class.  An Abstract Factory was implemented for the base class
	  and a concrete one was implemented for the OblateSpheroid class. The
	  idea is to strategize different body models into their own classes.

	* src/parse_scan.cc:

	  Minor updates.

Sun May  9 15:14:20 1999  Ossama Othman  <othman@cs.wustl.edu>

	* THANKS:

	  Updated the list of contributors.

	* doc/MaRC_input.texi:
	* lib/map/identity.h:
	* lib/map/identity.cc:
	* src/lexer.ll:
	* src/parse.yy:

	  Added an "identity" projection.  This projection simply returns
	  the provided map array unmodified.  Such a projection is primarily
	  useful for testing purposes.  Thanks to
	  Joe Harrington <jh@oobleck.tn.cornell.edu> for suggesting the
	  addition of this projection.

	* lib/imageio/Makefile.am:

	  Removed AIPS library directory from SUBDIRS list and added its
	  replacement, cfitsio.

	* lib/map/*.cc:

	  Many minor updates.

Mon May  3 17:28:57 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/maps.cc (Plot):

	  Fixed "percent complete" output code so that it doesn't print
	  duplicate percentages.

	  Renamed "PlotData" method to "Plot."

	* lib/map/boundary.cc:

	  Removed this file.  No longer need this file since it only
	  contained PHOTO (PhotoStrategy) specific boundary methods.
	  Each source image strategy should have its own
	  boundary implementation.

Sun May  2 00:43:28 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/cosine_strategy.{h,cc}:
	* lib/map/map_convert_strategy.{h,cc}:
	* lib/map/photo_strategy.{h,cc}:
	* lib/map/sourceimg.{h,cc}:

	  Strategized (using Strategy design pattern) SourceImage class.
	  Each source image type is now encapsulated in its own SourceImage
	  subclass.

	* lib/map/bodydata.{h,cc}:
	* lib/map/sourceimg.{h,cc}:

	  Moved cosine angle methods (Mu, Mu0 and CosPase) to BodyData
	  class.  A Body should know how to figure out how to compute
	  those angles, not a SourceImage.

	* lib/map/maps.cc (PlotData):

	  Greatly simplified PlotData method.  This was made possible by
	  the strategization of SourceImage classes.

	* lib/map/albeqv1.cc:
	* lib/map/albeqv2.cc:
	* lib/map/lamcnf1.cc:
	* lib/map/lamcnf2.cc:
	* lib/map/lamcyleq.cc:
	* lib/map/lampoleq.cc:
	* lib/map/mercator.cc:
	* lib/map/ortho.cc:
	* lib/map/p_stereo.cc:
	* lib/map/perspect.cc:
	* lib/map/simple_c.cc:
	* lib/map/sinusoid.cc:

	  Removed calls BodyData::CentricRadius and BodyData::GraphicLatitude
	  immediately prior to the PlotData call.  They were moved into the
	  ReadData call (either directly or indirectly) in each SourceImage
	  Strategy, resulting in a simpler interface.

	* lib/map/misc.h:

	  Moved bitset/flag utility functions into global scope.

Mon Apr 26 15:07:16 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/albeqv1.{h,cc}:
	* lib/map/albeqv2.{h,cc}:
	* lib/map/lamcnf1.{h,cc}:
	* lib/map/lamcnf2.{h,cc}:
	* lib/map/lamcyleq.{h,cc}:
	* lib/map/lampoleq.{h,cc}:
	* lib/map/maps.{h,cc}:
	* lib/map/mercator.{h,cc}:
	* lib/map/ortho.{h,cc}:
	* lib/map/p_stereo.{h,cc}:
	* lib/map/perspect.{h,cc}:
	* lib/map/simple_c.{h,cc}:
	* lib/map/sinusoid.{h,cc}:

	  Implemented Abstract Factory and Strategy design patterns to
	  improve extensiblity.

	* lib/map/*:

	  Updated copyright information.

	* lib/map/maps.h:

	  Moved projection specific class declarations from `maps.h' to
	  their newly created respective headers list below.

	* lib/map/albeqv1.h:
	* lib/map/albeqv2.h:
	* lib/map/conformal.h:
	* lib/map/equivalent.h:
	* lib/map/lamcnf1.h:
	* lib/map/lamcnf2.h:
	* lib/map/lamcyleq.h:
	* lib/map/lampoleq.h:
	* lib/map/mercator.h
	* lib/map/ortho.h:
	* lib/map/other.h:
	* lib/map/p_stereo.h:
	* lib/map/perspect.h:
	* lib/map/simple_c.h:
	* lib/map/sinusoid.h:

	  Added these files to aid in isolating projections from each other.

	* lib/map/Makefile.am:

	  Updated to include newly created projection header files.

Sun Apr 25 19:35:46 1999  Ossama Othman  <othman@cs.wustl.edu>

	* src/Makefile.am: Minor updates

Sun Apr 25 19:30:48 1999  Ossama Othman  <othman@cs.wustl.edu>

	* acconfig.h: Updated so that generated `config.h.in' will have
	  #include guards.

Sun Apr 25 14:26:19 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/bodydata.*:
	* lib/map/image.*:

	  Moved the body related methods from the IMAGE class to the
	  BodyData class.  It makes sense to do this.  Minor optimizations
	  were also made.

Sat Apr 24 20:06:48 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/map/*.{cc,h}:

	  Coding style updates.

Fri Apr 23 14:55:11 1999  Ossama Othman  <othman@cs.wustl.edu>

	* lib/imageio/Makefile.am:

	  Removed support for AIPS++ FITS library support in favor of
	  GSFC/HEASARC CFITSIO library.

	* lib/imageio/cfitsio/Makefile.am:
	* lib/imageio/cfitsio/configure.in:

	  Added GNU Automake support to the CFITSIO library.
