9 February 2006 - MaRC 0.9.7ncn

- Temporary fork until Ossama has time to integrate my changes.
- Introduced supersampling verification.
- Fixed crucial off-by-one-half-pixel error in projections.
- Substantial internal rearrangements and cleanups, including fixes for
  some non-user-visible installation and build bugs.

11 November 2005 - MaRC 0.9.7

- Fixed latitude/longitude visibility calculation so that it correctly
  takes into account an optical axis that is not in line with the
  sub-observation point.

9 November 2005 - MaRC 0.9.6

- Reduced floating point computation error when image focal length and
  scale are available.

- Fixed logic error that prevented images from being mapped
  correctly.

8 February 2005 - MaRC 0.9.5

- Fixed map corruption and redundant mapping problems that occured
  when specifying more than one MaRC input file on the command line to
  parse.
- MaRC input file PDF documentation now contains a section menu and
  hyperlinks with the document text.

8 November 2004 - MaRC 0.9.4

- Removed dependency on FlexLexer.h when building MaRC.
- Added several regression tests.  Try "make check".

3 November 2004 - MaRC 0.9.3

- Enhanced C library NaN constant detection to support additional ways
  of retrieving the NaN constant.  Addresses build errors on Solaris.

2 November 2004 - MaRC 0.9.2

- Added support for Transverse Mercator projection.  It is a conformal
  projection, i.e. it preserves shape.
- Added support for Polar Stereographic projects.  It too is a
  conformal projection.
- Fixed configuration problem on Solaris.

13 October 2004 - MaRC 0.9.1

- Fixed mosaic averaging code regression so that seams in image
  overlap regions are once again barely visible when averaging images
  taken by the same instrument at the same settings (e.g. wavelength).
- Slight speed improvement due to replacement of old TNT matrix code
  with MaRC-specific simple and fast matrix/vector implementation.
- Fixed a memory leak and a few potential ones.
- Addressed problem where longitudes in a "longitude map" were not
  wrapped into a 360 degree range.
- Added support for GNU g++ 3.4.2.

6 July 2004 - MaRC 0.9

- Major code rewrite.  Much cleaner and better designed and organized.
- MaRC now requires modern compilers that support most ANSI/ISO C++
  features.  Currently tested with GNU g++ 2.95, 3.2.2 and 3.4.0 on
  Linux.
- Added two new types of map planes "LATITUDE" and "LONGITUDE", which
  contain maps of the latitudes and longitudes in degrees,
  respectively.
- Many areas of MaRC have been further optimized.
- Geometric and photometric correction techniques are now "pluggable."
- CFITSIO is the underlying FITS library in MaRC, replacing AIPS++.
  This provides MaRC with all of the FITS file benefits provided by
  CFITSIO, such as on-the-fly FITS file compression/decompression.
- Added support for adding "AUTHOR", "ORIGIN" and "BLANK" FITS
  keywords to map FITS file.
- Sky removal feature no longer modifies source image, reducing the
  chances of losing valid data when mapping.
- Disabled all map projections except for Orthographic and Simple
  Cylindrical.  The others have not yet been ported to the new MaRC
  library API.
- MaRC is now distributed under the terms set forth in the GNU General
  Public License (GPL) and the GNU Lesser General Public License (LGPL).

18 November 1997

	- Updated coordinate transformation matrix computations.
	  Transformation should now be correct.  The update allows MaRC to
	  take into account the fact the camera may not be looking directly
	  at the sub-observation point.
	- Added a perspective projection.  (STILL EXPERIMENTAL)
	- Added code to use weighted averages when mapping in overlap regions.
	  Seams are virtually invisible when mapping source images that were
	  taken with the same instrument.
	- Many code fixes and clean ups.
	- Added some support for reading VICAR files.

30 May 1997

	- Memory is now handled very differently.  The new memory scheme
	  uses MUCH less memory for multi-plane maps than previously.  Memory
	  requirements depend ONLY on the number of samples and lines in the
	  desired map.  This means that a map with 20 planes would take up the
	  same amount of memory as a 1 plane map during mapping!  Of course,
	  additional memory is still required to handle the additional images
	  in the image queue, but this memory requirement is insignificant
	  compared to the memory savings of the new memory usage scheme.
	- Negative values may now be mapped on "SHORT" (16-bit) integer maps.
